package com.sbnz;

import com.sbnz.studycalendarapp.model.Subject;
import com.sbnz.studycalendarapp.service.StudyCalendarService;
import com.sbnz.studycalendarapp.service.StudySessionService;
import java.util.List
import java.util.ArrayList

global StudyCalendarService calendarService;
global StudySessionService studySessionService;

rule "Inject Obligations"
    when
        $calendar: StudyCalendar( obligationsInjected == false, prioritiesCalculated == false, sessionsCreated == false, $obligations: obligations)
        
        $listaListiSesija : List(size > 0) from accumulate( Obligation($id: id ,$dateList: service.getDatesInRange(studyStartDate, studyEndDate)) from $obligations,

			init(List<StudySession> listaListi = new ArrayList()),
			///////////////////////////
			action(
				sesijeJedneObaveze: List( size > 0) from accumulate ($date from $dateList, 
					init(List<StudySession> sesije = new ArrayList()),
					action(
						StudySession sesh = studySessionService.newStudySession($calendar, $id, $date);
						sesije.add(sesh);
					),
					result(sesije)
				)
				
				listListi.add(sesijeJedneObaveze);
			),
			///////////////////////////
			result(listaListi)
        ) 
    then
    	System.out.println("EVO PRINT IZ DRULZA")
		$calendar.setSessions(listaListiSesija.stream().flatMap(Collection::stream).collect(Collectors.toList()));
        update($calendar);
end 
