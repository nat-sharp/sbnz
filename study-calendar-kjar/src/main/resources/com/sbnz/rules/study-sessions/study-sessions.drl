package com.sbnz;

import com.sbnz.studycalendarapp.model.Obligation;
import com.sbnz.studycalendarapp.model.Subject;
import com.sbnz.studycalendarapp.model.Student;
import com.sbnz.studycalendarapp.service.StudyCalendarService;
import com.sbnz.studycalendarapp.model.StudyCalendar;
import com.sbnz.studycalendarapp.model.StudySession;
import com.sbnz.studycalendarapp.util.SortByPriority;

import java.time.LocalDate;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

global StudyCalendarService service;
global List<StudySession> $tempList;


rule "Inject Obligations"

	when
        $calendar: StudyCalendar( obligationsInjected == false, prioritiesCalculated == false, sessionsCreated == false, 
        $obligations: obligations)

        accumulate(
        	Obligation($obligation: this) from $obligations
        	and
        	LocalDate($date : this) from $obligation.getStudyStartDate().datesUntil($obligation.getStudyEndDate().plusDays(1)).collect(Collectors.toList()),
        	
        	$newSessions: collectList(new StudySession($date, $calendar, $obligation)),
        	$usedDates: collectSet($date)
        )
    then
    	System.out.println("-------------------------- NEW AND RENEWED RULEEEE 1--------------------");
    	System.out.println("Moguci datumi za ucenje: " );
    	for(Object d: $usedDates){
    		System.out.println(d.toString());
    	}
    	
    	$calendar.setSessions($newSessions);
    	$calendar.setObligationsInjected(true);
    	System.out.println("--------------Sad cemo izaci iz inject obligations --------------------");
		update($calendar);
end 



rule "Calculate Priorities"
	when
        $calendar: StudyCalendar( obligationsInjected == true, prioritiesCalculated == false, sessionsCreated == false, $sessions: sessions)

        accumulate(
        	StudySession($currentDate: date, priority == 0) from $sessions
        	and
        	$currentDateSessions: List(size > 0) from collect (
      			StudySession( date.equals($currentDate), priority == 0) from $sessions
        	),
        	
        	$successList: collectList($tempList.addAll(service.getPrioritizedSessions($currentDateSessions) ))
        )
        eval($successList.size() > 0)
        
   	then
   		System.out.println("-------------------------- NEW AND RENEWED RULEEEE 2--------------------");
    	$calendar.setSessions($tempList);
        								 
    	$calendar.setPrioritiesCalculated(true);
    	System.out.println("--------------Sad cemo izaci iz calculate priorities --------------------");
		update($calendar);

end 



rule "Create Sessions"

 	when
        $calendar: StudyCalendar( obligationsInjected == true, prioritiesCalculated == true, sessionsCreated == false)
    then
        $calendar = service.createSessions($calendar);
        $calendar.setSessionsCreated(true);
        update($calendar);
end 